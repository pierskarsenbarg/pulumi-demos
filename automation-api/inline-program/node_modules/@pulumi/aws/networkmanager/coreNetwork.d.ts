import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a core network resource.
 *
 * > **NOTE on Core Networks and Policy Attachments:** For a given core network, this resource's `policyDocument` argument is incompatible with using the `aws.networkmanager.CoreNetworkPolicyAttachment` resource. When using this resource's `policyDocument` argument and the `aws.networkmanager.CoreNetworkPolicyAttachment` resource, both will attempt to manage the core network's policy document and Pulumi will show a permanent difference.
 *
 * ## Example Usage
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.CoreNetwork("example", {globalNetworkId: aws_networkmanager_global_network.example.id});
 * ```
 * ### With description
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.CoreNetwork("example", {
 *     globalNetworkId: aws_networkmanager_global_network.example.id,
 *     description: "example",
 * });
 * ```
 * ### With tags
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.CoreNetwork("example", {
 *     globalNetworkId: aws_networkmanager_global_network.example.id,
 *     tags: {
 *         hello: "world",
 *     },
 * });
 * ```
 * ### With VPC Attachment (Single Region)
 *
 * The example below illustrates the scenario where your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Set the `createBasePolicy` argument to `true` if your core network does not currently have any `LIVE` policies (e.g. this is the first `pulumi up` with the core network resource), since a `LIVE` policy is required before VPCs can be attached to the core network. Otherwise, if your core network already has a `LIVE` policy, you may exclude the `createBasePolicy` argument.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleGlobalNetwork = new aws.networkmanager.GlobalNetwork("exampleGlobalNetwork", {});
 * const exampleCoreNetwork = new aws.networkmanager.CoreNetwork("exampleCoreNetwork", {
 *     globalNetworkId: exampleGlobalNetwork.id,
 *     createBasePolicy: true,
 * });
 * const exampleVpcAttachment = new aws.networkmanager.VpcAttachment("exampleVpcAttachment", {
 *     coreNetworkId: exampleCoreNetwork.id,
 *     subnetArns: aws_subnet.example.map(__item => __item.arn),
 *     vpcArn: aws_vpc.example.arn,
 * });
 * const exampleCoreNetworkPolicyDocument = aws.networkmanager.getCoreNetworkPolicyDocumentOutput({
 *     coreNetworkConfigurations: [{
 *         asnRanges: ["65022-65534"],
 *         edgeLocations: [{
 *             location: "us-west-2",
 *         }],
 *     }],
 *     segments: [{
 *         name: "segment",
 *     }],
 *     segmentActions: [{
 *         action: "create-route",
 *         segment: "segment",
 *         destinationCidrBlocks: ["0.0.0.0/0"],
 *         destinations: [exampleVpcAttachment.id],
 *     }],
 * });
 * const exampleCoreNetworkPolicyAttachment = new aws.networkmanager.CoreNetworkPolicyAttachment("exampleCoreNetworkPolicyAttachment", {
 *     coreNetworkId: exampleCoreNetwork.id,
 *     policyDocument: exampleCoreNetworkPolicyDocument.apply(exampleCoreNetworkPolicyDocument => exampleCoreNetworkPolicyDocument.json),
 * });
 * ```
 * ### With VPC Attachment (Multi-Region)
 *
 * The example below illustrates the scenario where your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Set the `createBasePolicy` argument of the `aws.networkmanager.CoreNetwork` resource to `true` if your core network does not currently have any `LIVE` policies (e.g. this is the first `pulumi up` with the core network resource), since a `LIVE` policy is required before VPCs can be attached to the core network. Otherwise, if your core network already has a `LIVE` policy, you may exclude the `createBasePolicy` argument. For multi-region in a core network that does not yet have a `LIVE` policy, pass a list of regions to the `aws.networkmanager.CoreNetwork` `basePolicyRegions` argument. In the example below, `us-west-2` and `us-east-1` are specified in the base policy.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleGlobalNetwork = new aws.networkmanager.GlobalNetwork("exampleGlobalNetwork", {});
 * const exampleCoreNetwork = new aws.networkmanager.CoreNetwork("exampleCoreNetwork", {
 *     globalNetworkId: exampleGlobalNetwork.id,
 *     basePolicyRegions: [
 *         "us-west-2",
 *         "us-east-1",
 *     ],
 *     createBasePolicy: true,
 * });
 * const exampleUsWest2 = new aws.networkmanager.VpcAttachment("exampleUsWest2", {
 *     coreNetworkId: exampleCoreNetwork.id,
 *     subnetArns: aws_subnet.example_us_west_2.map(__item => __item.arn),
 *     vpcArn: aws_vpc.example_us_west_2.arn,
 * });
 * const exampleUsEast1 = new aws.networkmanager.VpcAttachment("exampleUsEast1", {
 *     coreNetworkId: exampleCoreNetwork.id,
 *     subnetArns: aws_subnet.example_us_east_1.map(__item => __item.arn),
 *     vpcArn: aws_vpc.example_us_east_1.arn,
 * }, {
 *     provider: "alternate",
 * });
 * const exampleCoreNetworkPolicyDocument = aws.networkmanager.getCoreNetworkPolicyDocumentOutput({
 *     coreNetworkConfigurations: [{
 *         asnRanges: ["65022-65534"],
 *         edgeLocations: [
 *             {
 *                 location: "us-west-2",
 *             },
 *             {
 *                 location: "us-east-1",
 *             },
 *         ],
 *     }],
 *     segments: [
 *         {
 *             name: "segment",
 *         },
 *         {
 *             name: "segment2",
 *         },
 *     ],
 *     segmentActions: [
 *         {
 *             action: "create-route",
 *             segment: "segment",
 *             destinationCidrBlocks: ["10.0.0.0/16"],
 *             destinations: [exampleUsWest2.id],
 *         },
 *         {
 *             action: "create-route",
 *             segment: "segment",
 *             destinationCidrBlocks: ["10.1.0.0/16"],
 *             destinations: [exampleUsEast1.id],
 *         },
 *     ],
 * });
 * const exampleCoreNetworkPolicyAttachment = new aws.networkmanager.CoreNetworkPolicyAttachment("exampleCoreNetworkPolicyAttachment", {
 *     coreNetworkId: exampleCoreNetwork.id,
 *     policyDocument: exampleCoreNetworkPolicyDocument.apply(exampleCoreNetworkPolicyDocument => exampleCoreNetworkPolicyDocument.json),
 * });
 * ```
 *
 * ## Import
 *
 * `aws_networkmanager_core_network` can be imported using the core network ID, e.g.
 *
 * ```sh
 *  $ pulumi import aws:networkmanager/coreNetwork:CoreNetwork example core-network-0d47f6t230mz46dy4
 * ```
 */
export declare class CoreNetwork extends pulumi.CustomResource {
    /**
     * Get an existing CoreNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CoreNetworkState, opts?: pulumi.CustomResourceOptions): CoreNetwork;
    /**
     * Returns true if the given object is an instance of CoreNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CoreNetwork;
    /**
     * Core Network Amazon Resource Name (ARN).
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
     *
     * @deprecated Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
     */
    readonly basePolicyRegion: pulumi.Output<string | undefined>;
    /**
     * A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
     */
    readonly basePolicyRegions: pulumi.Output<string[] | undefined>;
    /**
     * Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `aws.networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies (e.g. a core network resource created without the `policyDocument` argument) and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. Conflicts with `policyDocument`. An example of this snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `aws.networkmanager.CoreNetworkPolicyAttachment` resource.
     *
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     */
    readonly createBasePolicy: pulumi.Output<boolean | undefined>;
    /**
     * Timestamp when a core network was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Description of the Core Network.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * One or more blocks detailing the edges within a core network. Detailed below.
     */
    readonly edges: pulumi.Output<outputs.networkmanager.CoreNetworkEdge[]>;
    /**
     * The ID of the global network that a core network will be a part of.
     */
    readonly globalNetworkId: pulumi.Output<string>;
    /**
     * Policy document for creating a core network. Note that updating this argument will result in the new policy document version being set as the `LATEST` and `LIVE` policy document. Refer to the [Core network policies documentation](https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-change-sets.html) for more information. Conflicts with `createBasePolicy`.
     *
     * @deprecated Use the aws_networkmanager_core_network_policy_attachment resource instead. This attribute will be removed in the next major version of the provider.
     */
    readonly policyDocument: pulumi.Output<string>;
    /**
     * One or more blocks detailing the segments within a core network. Detailed below.
     */
    readonly segments: pulumi.Output<outputs.networkmanager.CoreNetworkSegment[]>;
    /**
     * Current state of a core network.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Create a CoreNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CoreNetworkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CoreNetwork resources.
 */
export interface CoreNetworkState {
    /**
     * Core Network Amazon Resource Name (ARN).
     */
    arn?: pulumi.Input<string>;
    /**
     * The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
     *
     * @deprecated Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
     */
    basePolicyRegion?: pulumi.Input<string>;
    /**
     * A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
     */
    basePolicyRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `aws.networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies (e.g. a core network resource created without the `policyDocument` argument) and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. Conflicts with `policyDocument`. An example of this snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `aws.networkmanager.CoreNetworkPolicyAttachment` resource.
     *
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     */
    createBasePolicy?: pulumi.Input<boolean>;
    /**
     * Timestamp when a core network was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Description of the Core Network.
     */
    description?: pulumi.Input<string>;
    /**
     * One or more blocks detailing the edges within a core network. Detailed below.
     */
    edges?: pulumi.Input<pulumi.Input<inputs.networkmanager.CoreNetworkEdge>[]>;
    /**
     * The ID of the global network that a core network will be a part of.
     */
    globalNetworkId?: pulumi.Input<string>;
    /**
     * Policy document for creating a core network. Note that updating this argument will result in the new policy document version being set as the `LATEST` and `LIVE` policy document. Refer to the [Core network policies documentation](https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-change-sets.html) for more information. Conflicts with `createBasePolicy`.
     *
     * @deprecated Use the aws_networkmanager_core_network_policy_attachment resource instead. This attribute will be removed in the next major version of the provider.
     */
    policyDocument?: pulumi.Input<string>;
    /**
     * One or more blocks detailing the segments within a core network. Detailed below.
     */
    segments?: pulumi.Input<pulumi.Input<inputs.networkmanager.CoreNetworkSegment>[]>;
    /**
     * Current state of a core network.
     */
    state?: pulumi.Input<string>;
    /**
     * Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a CoreNetwork resource.
 */
export interface CoreNetworkArgs {
    /**
     * The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
     *
     * @deprecated Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
     */
    basePolicyRegion?: pulumi.Input<string>;
    /**
     * A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
     */
    basePolicyRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `aws.networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies (e.g. a core network resource created without the `policyDocument` argument) and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. Conflicts with `policyDocument`. An example of this snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `aws.networkmanager.CoreNetworkPolicyAttachment` resource.
     *
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * ```
     */
    createBasePolicy?: pulumi.Input<boolean>;
    /**
     * Description of the Core Network.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the global network that a core network will be a part of.
     */
    globalNetworkId: pulumi.Input<string>;
    /**
     * Policy document for creating a core network. Note that updating this argument will result in the new policy document version being set as the `LATEST` and `LIVE` policy document. Refer to the [Core network policies documentation](https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-change-sets.html) for more information. Conflicts with `createBasePolicy`.
     *
     * @deprecated Use the aws_networkmanager_core_network_policy_attachment resource instead. This attribute will be removed in the next major version of the provider.
     */
    policyDocument?: pulumi.Input<string>;
    /**
     * Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
